<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAGBgAAAAAIACICQAANgAAABQUAAAAACAAuAYAAL4JAAAQEAAAAAAgAGgEAAB2EAAAKAAAABgA
        AAAwAAAAAQAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApmEPMKZhDzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACmYhEws20X77NtFu+mYhAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKZjEzCzbRnv5JQv/+SUL/+zbRjvpmMSMAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAApmQVMLNuG+/klDD/6Jgy/+iYMv/klDD/s24Z76ZjEzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmZRgws28c7+SVMf/omDP/6Jgz/+iY
        M//omDP/5JUx/7NuG++mZBUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKZmGjCzcB7v5JUz/+iYNP/omDT/6Jg0/+iYNP/omDT/6Jg0/+SVMv+zbxzvpmUWMAAA
        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
        Pv8=
</value>
  </data>
</root>